<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnViewPass.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAUNJREFUSEvt
        1LsuBUEcx/HVuzwBCaF2qSgJFRoKL6HVoeEpEA8ghE5FSERFTaNTuCWulQLf78lOsmezN0d0+0s+iZ35
        z5jL7onq1PnXdGIeW7jAIz5jD3GbfXOwtnKGsAcn+q7I2l0MIjc92McXsiapwrEurhtNmcQdsga14gnT
        aGQJf1l1HudcROZZX2IWH4m2PNZY65h03y0yJ+mAeUe6L+0Nxjcp3XeOaAE38LXz9bMjvA3HSA9KO4IZ
        hs/e5SEOMICmbMOi5cZTFM0gOVmWcJmr8NlvIzdTsOge4ZjWkZwwaQ2mC2H34zYU5QwW7qDNBuJOPArv
        RP4dVm6NH5ljTm0oSz9eEf5J0c+AfWHyZ/ShUsbwAge6de/ES2yPjWAF4VisHcWv4mrcshMUOUEvWs4E
        NnENvxldYQOlF1qnJFH0AyYVyZ6tl3iiAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        FSjQAAAAAElFTkSuQmCC
</value>
  </data>
</root>